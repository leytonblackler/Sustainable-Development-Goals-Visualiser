{"ast":null,"code":"var _jsxFileName = \"/Users/rhazsolomon/Desktop/wheel/src/components/BasicMap/BasicMap.js\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\"\n};\nconst popScale = scaleLinear().domain([0, 100000000, 1400000000]).range([\"#FF0000\", \"#00FF00\", \"#0000FF\"]);\nconst gdpScale = scaleLinear().domain([0, 20000, 400000]).range([\"#FF0000\", \"#00FF00\", \"#0000FF\"]);\n\nfunction computeFill(geography, metric) {\n  console.log(metric);\n\n  if (metric == \"gdp\") {\n    alert(metric);\n    return gdpScale(geography.properties.gdp_md_est);\n  } else {\n    return popScale(geography.properties.pop_est);\n  }\n}\n\nclass BasicMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      metric: props.metric\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: wrapperStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale: 205,\n        rotation: [-11, 0, 0]\n      },\n      width: 980,\n      height: 551,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      center: [0, 20],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/examples/choropleth-map/static/world-50m-with-population.json\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, (geographies, projection) => geographies.map((geography, i) => React.createElement(Geography, {\n      key: i,\n      geography: geography,\n      projection: projection,\n      onClick: this.handleClick,\n      style: {\n        default: {\n          fill: computeFill(geography, this.state.metric),\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        },\n        hover: {\n          fill: \"#263238\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        },\n        pressed: {\n          fill: \"#263238\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default BasicMap;","map":{"version":3,"sources":["/Users/rhazsolomon/Desktop/wheel/src/components/BasicMap/BasicMap.js"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","scaleLinear","wrapperStyles","width","maxWidth","margin","popScale","domain","range","gdpScale","computeFill","geography","metric","console","log","alert","properties","gdp_md_est","pop_est","BasicMap","constructor","props","state","render","scale","rotation","height","geographies","projection","map","i","handleClick","default","fill","stroke","strokeWidth","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\"\nimport { scaleLinear } from \"d3-scale\"\n\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\",\n}\n\nconst popScale = scaleLinear()\n  .domain([0,100000000,1400000000])\n  .range([\"#FF0000\",\"#00FF00\",\"#0000FF\"])\n\nconst gdpScale = scaleLinear()\n  .domain([0, 20000, 400000])\n  .range([\"#FF0000\",\"#00FF00\",\"#0000FF\"])\n\nfunction computeFill(geography, metric) {\n  console.log(metric)\n  if (metric == \"gdp\") {\n    alert(metric)\n    return gdpScale(geography.properties.gdp_md_est)\n  } else {\n    return popScale(geography.properties.pop_est)\n  }\n}\n\nclass BasicMap extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      metric: props.metric\n    }\n  }\n  render() {\n    return (\n      <div style={wrapperStyles}>\n        <ComposableMap\n          projectionConfig={{\n            scale: 205,\n            rotation: [-11,0,0],\n          }}\n          width={980}\n          height={551}\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n          }}\n          >\n          <ZoomableGroup center={[0,20]}>\n            <Geographies geography={ \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/examples/choropleth-map/static/world-50m-with-population.json\" }>\n              {(geographies, projection) => geographies.map((geography, i) => (\n                <Geography\n                  key={ i }\n                  geography={ geography }\n                  projection={ projection }\n                  onClick={ this.handleClick }\n                  style={{\n                    default: {\n                      fill: computeFill(geography, this.state.metric),\n                      stroke: \"#607D8B\",\n                      strokeWidth: 0.75,\n                      outline: \"none\",\n                    },\n                    hover: {\n                      fill: \"#263238\",\n                      stroke: \"#607D8B\",\n                      strokeWidth: 0.75,\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#263238\",\n                      stroke: \"#607D8B\",\n                      strokeWidth: 0.75,\n                      outline: \"none\",\n                    }\n                  }}\n                />\n              ))}\n            </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    )\n  }\n}\n\nexport default BasicMap"]},"metadata":{},"sourceType":"module"}