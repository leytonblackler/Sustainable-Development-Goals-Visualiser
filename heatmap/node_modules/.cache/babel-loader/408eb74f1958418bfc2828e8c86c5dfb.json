{"ast":null,"code":"var _jsxFileName = \"/Users/rhazsolomon/Desktop/wheel/src/components/Map/Map.js\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\"\n};\n\nclass Map extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      style: wrapperStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale: 205,\n        rotation: [-11, 0, 0]\n      },\n      width: 980,\n      height: 551,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(ZoomableGroup, {\n      center: [0, 20],\n      disablePanning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Geographies, {\n      geography: \"/static/world-50m.json\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, (geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && React.createElement(Geography, {\n      key: i,\n      geography: geography,\n      projection: projection,\n      style: {\n        default: {\n          fill: \"#ECEFF1\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        },\n        hover: {\n          fill: \"#607D8B\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        },\n        pressed: {\n          fill: \"#FF5722\",\n          stroke: \"#607D8B\",\n          strokeWidth: 0.75,\n          outline: \"none\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/rhazsolomon/Desktop/wheel/src/components/Map/Map.js"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","wrapperStyles","width","maxWidth","margin","Map","render","scale","rotation","height","geographies","projection","map","geography","i","id","default","fill","stroke","strokeWidth","outline","hover","pressed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,mBALP;AAOA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,MADa;AAEpBC,EAAAA,QAAQ,EAAE,GAFU;AAGpBC,EAAAA,MAAM,EAAE;AAHY,CAAtB;;AAMA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BU,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAEL,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,gBAAgB,EAAE;AAChBM,QAAAA,KAAK,EAAE,GADS;AAEhBC,QAAAA,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAK,CAAL,EAAO,CAAP;AAFM,OADpB;AAKE,MAAA,KAAK,EAAE,GALT;AAME,MAAA,MAAM,EAAE,GANV;AAOE,MAAA,KAAK,EAAE;AACLN,QAAAA,KAAK,EAAE,MADF;AAELO,QAAAA,MAAM,EAAE;AAFH,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAE,CAAC,CAAD,EAAG,EAAH,CAAvB;AAA+B,MAAA,cAAc,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,wBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACC,WAAD,EAAcC,UAAd,KAA6BD,WAAW,CAACE,GAAZ,CAAgB,CAACC,SAAD,EAAYC,CAAZ,KAAkBD,SAAS,CAACE,EAAV,KAAiB,KAAjB,IAC9D,oBAAC,SAAD;AACE,MAAA,GAAG,EAAED,CADP;AAEE,MAAA,SAAS,EAAED,SAFb;AAGE,MAAA,UAAU,EAAEF,UAHd;AAIE,MAAA,KAAK,EAAE;AACLK,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,SADC;AAEPC,UAAAA,MAAM,EAAE,SAFD;AAGPC,UAAAA,WAAW,EAAE,IAHN;AAIPC,UAAAA,OAAO,EAAE;AAJF,SADJ;AAOLC,QAAAA,KAAK,EAAE;AACLJ,UAAAA,IAAI,EAAE,SADD;AAELC,UAAAA,MAAM,EAAE,SAFH;AAGLC,UAAAA,WAAW,EAAE,IAHR;AAILC,UAAAA,OAAO,EAAE;AAJJ,SAPF;AAaLE,QAAAA,OAAO,EAAE;AACPL,UAAAA,IAAI,EAAE,SADC;AAEPC,UAAAA,MAAM,EAAE,SAFD;AAGPC,UAAAA,WAAW,EAAE,IAHN;AAIPC,UAAAA,OAAO,EAAE;AAJF;AAbJ,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD4B,CADhC,CADF,CAZF,CADF,CADF;AAgDD;;AAlDyB;;AAqD5B,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\"\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\"\n\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\",\n}\n\nclass Map extends Component {\n  render() {\n    return (\n      <div style={wrapperStyles}>\n        <ComposableMap\n          projectionConfig={{\n            scale: 205,\n            rotation: [-11,0,0],\n          }}\n          width={980}\n          height={551}\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n          }}\n          >\n          <ZoomableGroup center={[0,20]} disablePanning>\n            <Geographies geography=\"/static/world-50m.json\">\n              {(geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && (\n                <Geography\n                  key={i}\n                  geography={geography}\n                  projection={projection}\n                  style={{\n                    default: {\n                      fill: \"#ECEFF1\",\n                      stroke: \"#607D8B\",\n                      strokeWidth: 0.75,\n                      outline: \"none\",\n                    },\n                    hover: {\n                      fill: \"#607D8B\",\n                      stroke: \"#607D8B\",\n                      strokeWidth: 0.75,\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#FF5722\",\n                      stroke: \"#607D8B\",\n                      strokeWidth: 0.75,\n                      outline: \"none\",\n                    },\n                  }}\n                />\n              ))}\n            </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    )\n  }\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}